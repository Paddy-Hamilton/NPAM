{"version":3,"file":"bundles/pages/index.js","sources":["webpack:///webpack/bootstrap b8535aac4192b08f7876","webpack:///components/ArticleGrid/index.jsx","webpack:///components/CreatePost/index.jsx","webpack:///components/CreatePostModal/index.jsx","webpack:///components/GetPostQuery/index.jsx","webpack:///components/Header/index.jsx","webpack:///components/PageLayout/index.jsx","webpack:///./graphql/queries.graphql","webpack:///lib/withData.js","webpack:///pages/index.js","webpack:///./src/graphql/posts.graphql","webpack:///./src/graphql/postsCount.graphql","webpack:///external \"@material-ui/core/AppBar\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/Card\"","webpack:///external \"@material-ui/core/CardContent\"","webpack:///external \"@material-ui/core/Grid\"","webpack:///external \"@material-ui/core/Grow\"","webpack:///external \"@material-ui/core/Icon\"","webpack:///external \"@material-ui/core/Modal\"","webpack:///external \"@material-ui/core/Toolbar\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons/Add\"","webpack:///external \"apollo-boost\"","webpack:///external \"moment\"","webpack:///external \"next-with-apollo\"","webpack:///external \"next/link\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-infinite-scroller\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b8535aac4192b08f7876","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Link from 'next/link';\nimport Grow from '@material-ui/core/Grow';\nimport moment from 'moment';\nconst styles = theme => ({\n  root: {\n    padding: '0 12px',\n    margin: '0 auto'\n  },\n  grid: {\n    marginTop: 0\n  },\n  post: {\n    position: 'relative',\n    cursor: 'pointer',\n    height: '100%',\n    transition: 'background 0.3s ease-in-out',\n    '&:hover,&:focus': {\n      background: theme.palette.secondary.xlight,\n      transition: 'background 0.3s ease-in-out',\n      '& $link,& $date': {\n        // color: 'white',\n        // transition: 'color 0.3s ease-in-out'\n      }\n    }\n  },\n  link: {\n    color: theme.palette.primary.dark,\n    textDecoration: 'none',\n    transition: 'color 0.3s ease-in-out'\n  },\n  date: {\n    color: theme.palette.primary.light,\n    transition: 'color 0.3s ease-in-out'\n  },\n  postTextContainer: {\n    textAlign: 'left',\n    paddingTop: theme.spacing.unit * 20,\n    width: '100%',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    background: 'rgba(255, 255, 255, 0.2)'\n  }\n});\n\nlet timeout = 100;\nlet counter = 1;\nfunction incrimentTimeout() {\n  if (counter % 20 === 0) {\n    counter = 1;\n  }\n  timeout = counter < 20 ? 100 * counter : 100;\n  counter++;\n  return timeout;\n}\n\nclass ArticleGrid extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.allPosts.length !== this.props.allPosts.length;\n  }\n  formatDateTime = dt => {\n    return moment(dt).format('l');\n  };\n  render() {\n    const { allPosts, classes } = this.props;\n    const timeout = 100;\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={24} className={classes.grid} alignItems=\"stretch\">\n          {allPosts &&\n            allPosts.map((post, i) => (\n              <Grow in timeout={incrimentTimeout()} key={post.id || post.title}>\n                <Grid item xs={12} md={6} lg={4} onClick={() => (window.location = post.url)}>\n                  <Card className={classes.post}>\n                    <CardContent>\n                      <div>\n                        <h3>\n                          <a className={classes.link} href={post.url}>\n                            {post.title}\n                          </a>\n                        </h3>\n                        <p className={classes.date}>\n                          <small>{moment(post.createdAt).format('MMMM Do YYYY')}</small>\n                        </p>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              </Grow>\n            ))}\n          {allPosts.length === 0 && (\n            <Grid item xs={12}>\n              <p>No items do display</p>\n            </Grid>\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nArticleGrid.propTypes = {\n  allPosts: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles)(ArticleGrid);\n\n\n\n// WEBPACK FOOTER //\n// components/ArticleGrid/index.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport { Mutation } from 'react-apollo';\nimport { TOGGLE_POST_MODAL_OPEN } from '../../graphql/queries.graphql';\nconst styles = theme => ({\n  btn: {\n    position: 'fixed',\n    bottom: theme.spacing.unit * 4,\n    right: theme.spacing.unit * 4\n  }\n});\n\nclass CreatePostBtn extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <Mutation mutation={TOGGLE_POST_MODAL_OPEN}>\n          {toggleCreatePostModal => (\n            <Button\n              variant=\"fab\"\n              color=\"primary\"\n              aria-label=\"add\"\n              className={classes.btn}\n              onClick={toggleCreatePostModal}\n            >\n              <AddIcon />\n            </Button>\n          )}\n        </Mutation>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(CreatePostBtn);\n\n\n\n// WEBPACK FOOTER //\n// components/CreatePost/index.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query, Mutation } from 'react-apollo';\nimport Modal from '@material-ui/core/Modal';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { CREATE_POST_MODAL_OPEN, TOGGLE_POST_MODAL_OPEN } from '../../graphql/queries.graphql';\nimport { adopt } from 'react-adopt';\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`\n  }\n});\nconst Composed = adopt({\n  isOpen: <Query query={CREATE_POST_MODAL_OPEN}>{() => {}}</Query>,\n  toggle: <Mutation mutation={TOGGLE_POST_MODAL_OPEN}>{() => {}}</Mutation>\n});\nclass CreatePostModal extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <Composed>\n        {({ isOpen, toggle }) => {\n          if (isOpen.loading || toggle.loading) console.log('loading', { isOpen, toggle });\n          if (isOpen.error || toggle.error) console.error({ isOpen, toggle });\n          return (\n            <Modal\n              aria-labelledby=\"Create post\"\n              aria-describedby=\"Create and publish a post\"\n              open={isOpen.data.createPostModalOpen}\n              onClose={toggle}\n            >\n              <div className={classes.paper}>\n                <Typography variant=\"title\" id=\"modal-title\">\n                  Text in a modal\n                </Typography>\n                <Typography variant=\"subheading\" id=\"simple-modal-description\">\n                  Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n                </Typography>\n              </div>\n            </Modal>\n          );\n        }}\n      </Composed>\n    );\n  }\n}\n\nCreatePostModal.propTypes = {};\n\nexport default withStyles(styles)(CreatePostModal);\n\n\n\n// WEBPACK FOOTER //\n// components/CreatePostModal/index.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport GET_POSTS from '../../src/graphql/posts.graphql';\nimport GET_POSTS_COUNT from '../../src/graphql/postsCount.graphql';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nclass GetPostQuery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentfetchedSkip: 0\n    };\n  }\n  loadMorePosts = (fetchMore, currentPostCount) => {\n    const { currentfetchedSkip } = this.state;\n    if (currentfetchedSkip === currentPostCount) return true;\n    this.setState({ currentfetchedSkip: currentPostCount }, () =>\n      fetchMore({\n        variables: {\n          skip: currentPostCount,\n          first: 20\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) return prev;\n          const newUnique = fetchMoreResult.allPosts.filter(\n            pm => prev.allPosts.findIndex(pr => pr.id === pm.id) === -1\n          );\n          if (newUnique.length === 0) {\n            return null;\n          }\n          const newData = Object.assign({}, prev, {\n            allPosts: [...prev.allPosts, ...newUnique]\n          });\n          return newData;\n        }\n      })\n    );\n  };\n\n  render() {\n    return (\n      <Query query={GET_POSTS_COUNT}>\n        {({\n          loading,\n          error,\n          data: {\n            _allPostsMeta: { count }\n          }\n        }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return `Error! ${error.message}`;\n\n          return (\n            <Query\n              query={GET_POSTS}\n              variables={{\n                first: 20,\n                skip: 0\n              }}\n              fetchPolicy=\"cache-and-network\"\n              notifyOnNetworkStatusChange={true}\n            >\n              {({ loading, error, networkStatus, data: { allPosts }, fetchMore }) => {\n                if (loading) <p>Loading...</p>;\n                if (error) return `Error! ${error.message}`;\n                return (\n                  <InfiniteScroll\n                    pageStart={0}\n                    loadMore={() => (networkStatus === 7 ? this.loadMorePosts(fetchMore, allPosts.length) : null)}\n                    hasMore={count > allPosts.length}\n                    loader={\n                      <div className=\"loader\" key={0}>\n                        Loading ...\n                      </div>\n                    }\n                  >\n                    {this.props.render(allPosts)}\n                  </InfiniteScroll>\n                );\n              }}\n            </Query>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default GetPostQuery;\n\n\n\n// WEBPACK FOOTER //\n// components/GetPostQuery/index.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appBar: {\n    background: `linear-gradient(45deg, ${theme.palette.primary.dark} 30%, ${theme.palette.secondary.light} 90%)`,\n    color: '#fff'\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignitems: 'center'\n  }\n});\n\nclass Header extends Component {\n  render() {\n    const { classes, name, children } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar className={classes.toolbar}>\n            <Typography variant=\"title\" color=\"inherit\">\n              {name}\n            </Typography>\n            <div>{children}</div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(Header);\n\n\n\n// WEBPACK FOOTER //\n// components/Header/index.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Header from '../Header';\nimport Link from 'next/link';\nimport Grid from '@material-ui/core/Grid';\nconst styles = theme => ({\n  root: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 20\n  },\n  btn: {\n    color: theme.palette.primary.dark\n  }\n});\n\nclass PageLayout extends React.Component {\n  render() {\n    const { classes, children } = this.props;\n    return (\n      <React.Fragment>\n        <Header name=\"Next/Material/Apollo\">\n          <Link href=\"/\">\n            <Button className={classes.btn}>\n              <a>Home</a>\n            </Button>\n          </Link>\n          <Link href=\"/about\">\n            <Button className={classes.btn}>\n              <a>About</a>\n            </Button>\n          </Link>\n        </Header>\n        {children}\n      </React.Fragment>\n    );\n  }\n}\n\nPageLayout.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(PageLayout);\n\n\n\n// WEBPACK FOOTER //\n// components/PageLayout/index.jsx","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"CREATE_POST_MODAL_OPEN\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createPostModalOpen\"},\"arguments\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"client\"},\"arguments\":[]}]}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"TOGGLE_POST_MODAL_OPEN\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"toggleCreatePostModal\"},\"arguments\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"client\"},\"arguments\":[]}]}]}}],\"loc\":{\"start\":0,\"end\":130}};\n    doc.loc.source = {\"body\":\"query CREATE_POST_MODAL_OPEN {\\n  createPostModalOpen @client\\n}\\nmutation TOGGLE_POST_MODAL_OPEN {\\n  toggleCreatePostModal @client\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"CREATE_POST_MODAL_OPEN\"] = oneQuery(doc, \"CREATE_POST_MODAL_OPEN\");\n        \n        module.exports[\"TOGGLE_POST_MODAL_OPEN\"] = oneQuery(doc, \"TOGGLE_POST_MODAL_OPEN\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./graphql/queries.graphql\n// module id = ./graphql/queries.graphql\n// module chunks = 0 3","import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { CREATE_POST_MODAL_OPEN } from '../graphql/queries.graphql';\n// can also be a function that accepts a `headers` object (SSR only) and returns a config\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: 'https://api.graph.cool/simple/v1/cixmkt2ul01q00122mksg82pn',\n    connectToDevTools: true,\n    ssrMode: !process.browser, // Disables forceFetch on the server (so queries are only run once)\n    // request: async operation => {\n    //   // operation.setContext({\n    //   //   fetchOptions: {\n    //   //     credentials: 'same-origin'\n    //   //   },\n    //   //   headers\n    //   // });\n    // },\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCreatePostModal(_, variables, { cache }) {\n            const { createPostModalOpen } = cache.read({ query: CREATE_POST_MODAL_OPEN });\n            const data = { data: { createPostModalOpen: !createPostModalOpen } };\n            cache.writeData(data);\n            return data;\n          }\n        }\n      },\n      defaults: {\n        createPostModalOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo({ client: createClient });\n\n\n\n// WEBPACK FOOTER //\n// lib/withData.js","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport withData from '../lib/withData';\nimport PageLayout from '../components/PageLayout';\nimport ArticleGrid from '../components/ArticleGrid';\nimport GetPostQuery from '../components/GetPostQuery';\nimport CreatePostBtn from '../components/CreatePost';\nimport CreatePostModal from '../components/CreatePostModal';\n\nclass Index extends React.Component {\n  render() {\n    return (\n      <PageLayout>\n        <GetPostQuery render={allPosts => <ArticleGrid allPosts={allPosts} />} />\n        <CreatePostBtn />\n        <CreatePostModal />\n      </PageLayout>\n    );\n  }\n}\n\nexport default Index;\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getAllPosts\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"first\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"skip\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"allPosts\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"first\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"first\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"skip\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"skip\"}}}],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"connection\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"posts\",\"block\":false}}]}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":155}};\n    doc.loc.source = {\"body\":\" query getAllPosts($first:Int!,$skip: Int!) {\\n  allPosts(first:$first,skip:$skip)  @connection(key:\\\"posts\\\") {\\n    title\\n    id\\n    createdAt \\n    url\\n  }\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"getAllPosts\"] = oneQuery(doc, \"getAllPosts\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/posts.graphql\n// module id = ./src/graphql/posts.graphql\n// module chunks = 3","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"_allPostsMeta\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"count\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":45}};\n    doc.loc.source = {\"body\":\" query {\\n  _allPostsMeta  {\\n    count\\n  }  \\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/postsCount.graphql\n// module id = ./src/graphql/postsCount.graphql\n// module chunks = 3","module.exports = require(\"@material-ui/core/AppBar\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/AppBar\"\n// module id = @material-ui/core/AppBar\n// module chunks = 0 3","module.exports = require(\"@material-ui/core/Button\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/Button\"\n// module id = @material-ui/core/Button\n// module chunks = 0 3","module.exports = require(\"@material-ui/core/Card\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/Card\"\n// module id = @material-ui/core/Card\n// module chunks = 3","module.exports = require(\"@material-ui/core/CardContent\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/CardContent\"\n// module id = @material-ui/core/CardContent\n// module chunks = 3","module.exports = require(\"@material-ui/core/Grid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/Grid\"\n// module id = @material-ui/core/Grid\n// module chunks = 0 3","module.exports = require(\"@material-ui/core/Grow\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/Grow\"\n// module id = @material-ui/core/Grow\n// module chunks = 3","module.exports = require(\"@material-ui/core/Icon\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/Icon\"\n// module id = @material-ui/core/Icon\n// module chunks = 3","module.exports = require(\"@material-ui/core/Modal\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/Modal\"\n// module id = @material-ui/core/Modal\n// module chunks = 3","module.exports = require(\"@material-ui/core/Toolbar\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/Toolbar\"\n// module id = @material-ui/core/Toolbar\n// module chunks = 0 3","module.exports = require(\"@material-ui/core/Typography\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/Typography\"\n// module id = @material-ui/core/Typography\n// module chunks = 0 3","module.exports = require(\"@material-ui/core/styles\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/styles\"\n// module id = @material-ui/core/styles\n// module chunks = 0 1 3","module.exports = require(\"@material-ui/icons/Add\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/icons/Add\"\n// module id = @material-ui/icons/Add\n// module chunks = 3","module.exports = require(\"apollo-boost\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-boost\"\n// module id = apollo-boost\n// module chunks = 0 3","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = moment\n// module chunks = 3","module.exports = require(\"next-with-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next-with-apollo\"\n// module id = next-with-apollo\n// module chunks = 0 3","module.exports = require(\"next/link\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next/link\"\n// module id = next/link\n// module chunks = 0 3","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = prop-types\n// module chunks = 0 3","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 0 1 3","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = react-apollo\n// module chunks = 0 3","module.exports = require(\"react-infinite-scroller\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-infinite-scroller\"\n// module id = react-infinite-scroller\n// module chunks = 3"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAHA;AALA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AA/BA;AAAA;AACA;AAyCA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;;;;;;AALA;AACA;AACA;;;AAIA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAZA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA3CA;AACA;AA6CA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAAA;AACA;AAOA;;;;;;;;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AARA;AAcA;;;;AApBA;AACA;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAAA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAGA;;;;;;;;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;;;;AA5BA;AACA;AA8BA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAjBA;AADA;AAqBA;AA9BA;AAEA;AACA;AADA;AAFA;AAKA;AACA;;;AA0BA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAaA;AAGA;AAGA;;;;AA/EA;AACA;AAiFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AARA;AAAA;AACA;AAcA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAfA;AACA;AAiBA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAAA;AACA;AASA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AApBA;AACA;AAsBA;AACA;AADA;AAIA;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AANA;AADA;AAUA;AACA;AADA;AAXA;AAZA;AA4BA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AATA;AACA;AAWA;;;;;;;ACrnjHA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}